basic <- read.csv("data/intelligence.csv", stringsAsFactors=FALSE)
basic <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
basic
View(basic)
View(basic)
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
View(data)
#Define variables that might be of interest
vars <- c("Group", "MS.QoL", "DREEM.A.SP")
#New way to get basic descriptives:
library(psych)
describe(data[,vars], Group = 'Basic Science')
describe(data[,vars], IQR = TRUE)
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
# Subseting the data
basic <- subset(surv, Group=="Basic Science")
# Subseting the data
basic <- subset(data, Group=="Basic Science")
View(basic)
View(basic)
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
# Subseting the data
basic <- subset(data, Group=="Basic Sciences")
View(basic)
View(basic)
describe(basic[,vars], IQR = TRUE)
# Take an intial look at the variables
corr.test(intel[,vars])$r
# Take an intial look at the variables
corr.test(basic[,vars])$r
# Define variables that might be of interest
vars <- c("MS.QoL", "DREEM.A.SP")
# New way to get basic descriptives:
library(psych)
describe(basic[,vars], IQR = TRUE)
# Take an intial look at the variables
corr.test(basic[,vars])$r
# Check linearity
simpleScatter(basic, DREEM.A.SP, MS.QoL, line=TRUE)
# Check linearity
library(SDSRegressionR)
simpleScatter(basic, DREEM.A.SP, MS.QoL, line=TRUE)
# Run the intial model
init_model <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(init_model)
#Look for outliers
threeOuts(init_model)
cooksPlot(init_model)
# Take an intial look at the variables
corr.test(basic[,vars])$r
corr.test(basic[,vars])$r^2*100
#Remove the highest outlier
"%not in%" <- Negate("%in%")
good <- basic[row.names(basic) %not in% (c(208)), ]
#Re-run the model
new_model <- lm(MS.QoL ~ DREEM.A.SP, data=good)
summary(new_model)
# Grab confidence intervals
confint(new_model)
linearHypothesis(new_model, "DREEM.A.SP = 10.00")
#Test the additional question
library(car)
linearHypothesis(new_model, "DREEM.A.SP = 10.00")
# Predict new MS.QoL
nw_dreem <- data.frame(DREEM.A.SP = 10)
View(nw_dreem)
predict(new_model, nw_dreem, interval="prediction")
# Grab confidence intervals
confint(new_model)
10.0
linearHypothesis(new_model, "DREEM.A.SP = 10.00")
linearHypothesis(new_model, "DREEM.A.SP =  0.31483")
linearHypothesis(new_model, "DREEM.A.SP =  0.31483")
linearHypothesis(new_model, "DREEM.A.SP =  0.175")
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
# Subseting the data
basic <- subset(data, Group=="Basic Sciences")
View(data)
View(basic)
# Define variables that might be of interest
vars <- c("MS.QoL", "DREEM.A.SP")
# New way to get basic descriptives:
library(psych)
describe(basic[,vars], IQR = TRUE)
# Take an intial look at the variables
corr.test(basic[,vars])$r
corr.test(basic[,vars])$r^2*100
# Check linearity
library(SDSRegressionR)
simpleScatter(basic, DREEM.A.SP, MS.QoL, line=TRUE)
# Run the intial model
init_model <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(init_model)
# Look for outliers
threeOuts(init_model)
cooksPlot(init_model)
#Remove the highest outlier
"%not in%" <- Negate("%in%")
good <- basic[row.names(basic) %not in% (c(208)), ]
#Re-run the model
new_model <- lm(MS.QoL ~ DREEM.A.SP, data=good)
summary(new_model)
corr.test(good[,vars])$r^2*100
#Re-run the model
new_model <- lm(MS.QoL ~ DREEM.A.SP, data=good)
summary(new_model)
# Grab confidence intervals
confint(new_model)
# Predict new MS.QoL
nw_dreem <- data.frame(DREEM.A.SP = 10)
predict(new_model, nw_dreem, interval="prediction")
# Test if different slope is significant
library(car)
linearHypothesis(new_model, "DREEM.A.SP =  0.175")
corr.test(good[,vars])$r
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
# Subseting the data
basic <- subset(data, Group=="Basic Sciences")
# Define variables that might be of interest
vars <- c("MS.QoL", "DREEM.A.SP")
# New way to get basic descriptives:
library(psych)
describe(basic[,vars], IQR = TRUE)
# Take an intial look at the variables
corr.test(basic[,vars])$r
corr.test(basic[,vars])$r^2*100
# Check linearity
library(SDSRegressionR)
simpleScatter(basic, DREEM.A.SP, MS.QoL, line=TRUE)
# Run the intial model
init_model <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(init_model)
# Look for outliers
threeOuts(init_model)
cooksPlot(init_model)
#Remove the highest outlier
"%not in%" <- Negate("%in%")
good <- basic[row.names(basic) %not in% (c(208)), ]
corr.test(good[,vars])$r
#Re-run the model
new_model <- lm(MS.QoL ~ DREEM.A.SP, data=good)
summary(new_model)
# Predict new MS.QoL
nw_dreem <- data.frame(DREEM.A.SP = 10)
predict(new_model, nw_dreem, interval="prediction")
# Test if different slope is significant
library(car)
linearHypothesis(new_model, "DREEM.A.SP =  0.175")
data <- read.csv("data/Resilience.csv", stringsAsFactors=FALSE)
# Subseting the data
basic <- subset(data, Group=="Basic Sciences")
# Define variables that might be of interest
vars <- c("MS.QoL", "DREEM.A.SP")
# New way to get basic descriptives:
library(psych)
describe(basic[,vars], IQR = TRUE)
# Take an intial look at the variables
corr.test(basic[,vars])$r
corr.test(basic[,vars])$r^2*100
# Check linearity
library(SDSRegressionR)
simpleScatter(basic, DREEM.A.SP, MS.QoL, line=TRUE)
# Run the intial model
init_model <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(init_model)
summary(init_model)
# Look for outliers
threeOuts(init_model)
cooksPlot(init_model)
#Remove the highest outlier
"%not in%" <- Negate("%in%")
good <- basic[row.names(basic) %not in% (c(208)), ]
corr.test(good[,vars])$r
corr.test(good[,vars])$r^2*100
#Re-run the model
new_model <- lm(MS.QoL ~ DREEM.A.SP, data=good)
summary(new_model)
